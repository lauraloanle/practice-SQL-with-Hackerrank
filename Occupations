--Problem Statement
/*
Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively.

Note: Print NULL when there are no more names corresponding to an occupation.

Input Format

The OCCUPATIONS table is described as follows:
+-------------+------------+
| Column      |   Type     |
+-------------+------------+
|name         | STRING     |
|occupation   | STRING     |
+-------------+------------+

Occupation will only contain one of the following values: Doctor, Professor, Singer or Actor.

*/

-- Solution:
-- labeling the rows with @r1, @r2, @r3, @r4 to count the occurrance of each type of occupation.
-- select min(occupation) = max(occupation) because before GROUP BY RowNumber, the Name will be a single instance in a row 
surrounded by NULL values for the other 3 occupations. So use the min() or max() is just basically a mechanism to grab the 
one name value in the row and omit the NULLs.

set @r1 = 0, @r2 = 0, @r3 = 0, @r4 = 0;
select min(Doctor), min(Professor), min(Singer), min(Actor)
from
(select case when occupation = 'Doctor' then (@r1:=@r1 +1) 
      when occupation = 'Professor' then (@r2:=@r2 +1)
     when occupation = 'Singer' then (@r3:=@r3 +1)
     when occupation = 'Actor' then (@r4:=@r4 +1) 
end as RowNumber,

case when occupation = 'Doctor' then Name end as Doctor, 
case when occupation = 'Professor' then Name end as Professor,
case when occupation = 'Singer' then Name end as Singer,
case when occupation = 'Actor'then Name end as Actor
from Occupations order by Name) new_table
group by RowNumber;
