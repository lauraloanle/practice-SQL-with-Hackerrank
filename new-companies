--Problem Statement
/*

Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.

Note:

The tables may contain duplicate records.
The company_code is string, so the sorting should not be numeric. For example, if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.

Problem link: https://www.hackerrank.com/challenges/the-company/problem

*/

-- Solution:
-- Use Distinct when selecting count from tables to avoid duplicate variables.

SELECT  c.company_code, c.founder, count(distinct l.lead_manager_code), count(distinct s.senior_manager_code), count(distinct m.manager_code), count(distinct e.employee_code)
FROM Company c join Lead_Manager l on c.company_code = l.company_code
               join Senior_Manager s on c.company_code = s.company_code
               join Manager m on c.company_code = m.company_code
               join Employee e on c.company_code = e.company_code
GROUP BY c.company_code, c.founder
Order BY c.company_code;

-- Other solution: do not use JOIN function

SELECT  c.company_code, c.founder, count(distinct l.lead_manager_code), count(distinct s.senior_manager_code), count(distinct m.manager_code), count(distinct e.employee_code)
FROM Company c , Lead_Manager l, Senior_Manager s, Manager m, Employee e
WHERE c.company_code = l.company_code
AND   c.company_code = s.company_code
AND   c.company_code = m.company_code
AND   c.company_code = e.company_code
GROUP BY c.company_code, c.founder
ORDER BY c.company_code;



